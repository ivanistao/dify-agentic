---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
spec:
  serviceName: "postgres"
  replicas: 1 # by default is 1
  selector:
    matchLabels:
      app.kubernetes.io/name: postgres
      app.kubernetes.io/instance: postgres
  template:
    metadata:
      annotations:
        github.com/repo: https://github.com/ivanistao/dify-agentic
      labels:
        app.kubernetes.io/name: postgres
        app.kubernetes.io/instance: postgres
    spec:
      serviceAccountName: postgres
      terminationGracePeriodSeconds: 10
      nodeSelector:
        kubernetes.io/os: linux
      containers:
        - name: postgres
          image: postgres:15-alpine
          env:
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: pg-username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: pg-password
            - name: POSTGRES_DB
              value: dify
          livenessProbe:
            exec:
              command:
                - "pg_isready"
                - "-U"
                - "$(PGUSER)"
                - "-d"
                - "$(POSTGRES_DB)"
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 10
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          ports:
            - containerPort: 5432
              name: pg-port
          volumeMounts:
            - name: pg-data
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: pg-data
          hostPath:
            path: /root/db/postgres/data
            type: DirectoryOrCreate